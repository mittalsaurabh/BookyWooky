{"version":3,"sources":["components/Card/Card.js","components/Cardlist/Cardlist.js","components/Searchbox/Searchbox.js","components/Book/Book.js","App.js","serviceWorker.js","index.js"],"names":["Card","_ref","bookData","expandBook","bookTitle","best_book","title","displayTitle","substring","length","react_default","a","createElement","className","src","image_url","alt","style","height","width","aria-label","includes","author","name","onClick","href","Cardlist","books","map","book","components_Card_Card","key","id","apiKey","Searchbox","state","searchText","error","fetchingData","onTextChange","val","_this","setState","target","value","onButtonClick","requestUri","concat","Axios","get","then","res","parseXMLResponse","data","catch","toString","response","XMLResponse","DOMParser","parseFromString","getElementsByTagName","searchResults","Object","construct","Array","toConsumableArray","result","XMLToJson","props","setResults","XML","allNodes","children","jsonResult","forEach","node","nodeName","innerHTML","placeholder","onChange","this","type","components_Cardlist_Cardlist","results","Component","Book","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getDescription","bookId","parseXMLresponse","description","replace","collapseBook","average_rating","original_publication_day","original_publication_month","original_publication_year","clasNames","dangerouslySetInnerHTML","__html","App","expandedBook","components_Book_Book","components_Searchbox_Searchbox","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.749b5605.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({ bookData, expandBook }) => {\r\n\r\n\tconst bookTitle = bookData.best_book.title;\r\n\tlet displayTitle = bookTitle.substring(0,12);\r\n\tif (bookTitle.length > displayTitle.length) {\r\n\t\tdisplayTitle += \"...\";\r\n\t}\r\n\t\r\n    return (\r\n\t\t<article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 dib ma2  bg-white\">\r\n\t\t  \t<img \r\n\t\t  \t\tsrc={bookData.best_book.image_url} \r\n\t\t  \t\tclassName=\"db w-100 br2 br--top ma3\" \r\n\t\t  \t\talt=\"BOOK COVER\"\r\n\t\t  \t\tstyle={{\r\n\t\t  \t\t\t'height': '300px',\r\n\t\t  \t\t\t'width': '222px'\r\n\t\t  \t\t}} \r\n\t\t  \t/>\r\n\t\t  \t<div className=\"pa2 ph3-ns pb3-ns\">\r\n\t\t\t    <div className=\"dt w-100 mt1\">\r\n\t\t\t      \t<div className=\"dtc\">\r\n\t\t\t\t        <h1 className=\"f5 f4-ns mv0\">\r\n\t\t\t\t        \t<span className=\"hint--bottom\" aria-label={displayTitle.includes(\"...\") ? bookTitle : \"\"}>\r\n\t\t\t\t        \t\t{displayTitle}\r\n\t\t\t\t        \t</span>\t\r\n\t\t\t\t        </h1>\r\n\t\t\t      \t</div>\r\n\t\t\t    </div>\r\n\t\t\t    <p className=\"f6 lh-copy measure mt2 mid-gray\">\r\n\t\t\t      \t{bookData.best_book.author.name}\r\n\t\t\t    </p>\r\n\r\n\t\t\t    <a className=\"f6 link dim br2 ph3 pv2 mb2 dib white bg-dark-blue\" onClick={() => expandBook(bookData)} href='##' >\r\n\t\t\t    \tMore Info\t\r\n\t\t\t    </a> \r\n\t\t  \t</div>\r\n\t\t</article>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../Card/Card.js';\r\nimport './Cardlist.css';\r\n\r\nconst Cardlist = ({ books, expandBook }) => {\r\n  \treturn (\r\n\t    <div>\r\n\t\t    {books.map(book => (\r\n\t\t    \t<Card bookData={book} key={book.id} expandBook={expandBook} />\r\n\t\t    ))}\r\n\t    </div>\r\n  \t);\r\n}\r\n\r\nexport default Cardlist;\r\n","import React, { Component } from 'react';\r\nimport Axios from \"axios\";\r\nimport Cardlist from '../Cardlist/Cardlist.js';\r\nimport './Searchbox.css';\r\n\r\nconst apiKey = \"iFBP3pW7lQSCL8PY0x8ng\";\r\n\r\nclass Searchbox extends Component {\r\n\r\n\tstate = {\r\n\t\tsearchText: \"\",\r\n\t\terror: \"\",\r\n\t\tfetchingData: false\r\n\t};\r\n\r\n\tonTextChange = val => {\r\n\t\tthis.setState({\r\n\t\t\tsearchText: val.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tonButtonClick = () => {\r\n\t\tthis.setState({\r\n\t\t\tfetchingData: true\r\n\t\t});\r\n\r\n\t\tconst { searchText } = this.state;\r\n\t\tconst requestUri = \r\n\t\t\t`https://cors-anywhere.herokuapp.com/` +\r\n      \t\t`https://www.goodreads.com/search/index.xml?key=${apiKey}&q=${searchText}`;\r\n\t\t\r\n\t\tAxios.get(requestUri)\r\n\t\t    .then(res => {\r\n\t\t    \tthis.parseXMLResponse(res.data);\r\n\t\t  \t})\r\n\t\t    .catch(error => {\r\n\t\t        this.setState({\r\n\t\t          \terror: error.toString(),\r\n\t\t          \tfetchingData: false\r\n\t\t        });\t\r\n\t\t\t});\r\n\t};\r\n\r\n\tparseXMLResponse = response => {\r\n\t\tconst parser = new DOMParser();\r\n\t    const XMLResponse = parser.parseFromString(response, \"application/xml\");\r\n\t    const parseError = XMLResponse.getElementsByTagName(\"parsererror\");\r\n\r\n\t    if (parseError.length) {\r\n\t      \tthis.setState({\r\n\t\t        error: \"There was an error fetching results.\",\r\n\t\t        fetchingData: false\r\n\t      \t});\r\n\t    } else {\r\n\t\t\tconst XMLresults = new Array(...XMLResponse.getElementsByTagName(\"work\"));\r\n\t\t\tconst searchResults = XMLresults.map(result => this.XMLToJson(result));\r\n\t\t\tthis.setState({ fetchingData: false }, () => {\r\n\t\t    \tthis.props.setResults(searchResults);\r\n\t      \t});\r\n\t    }\r\n\t};\r\n\r\n\t// Function to convert simple XML document into JSON.\r\n\t// Loops through each child and saves it as key, value pair\r\n\t// if there are sub-children, call the same function recursively on its children.\r\n\tXMLToJson = XML => {\r\n\t    const allNodes = new Array(...XML.children);\r\n\t    const jsonResult = {};\r\n\t    allNodes.forEach(node => {\r\n\t      \tif (node.children.length) {\r\n\t        \tjsonResult[node.nodeName] = this.XMLToJson(node);\r\n\t      \t} else {\r\n\t        \tjsonResult[node.nodeName] = node.innerHTML;\r\n\t      \t}\r\n\t    });\r\n\t    return jsonResult;\r\n\t};\r\n\r\n  \trender() {\r\n    \treturn (\r\n\t\t\t<div className=\"pa4-l pt5-l tc pa3-m pa2\">\r\n\t\t\t  \t<div className=\"bg-light-red mw7 center pa4 br2-ns ba b--black-10\">\r\n\t\t\t\t    <fieldset className=\"cf bn ma0 pa0\">\r\n\t\t\t\t      \t<legend className=\"pa0 f5 f3-ns mb3 black-80 bold fw7\">\r\n\t\t\t\t      \t\tWELCOME TO THE BOOKYWOOKY\r\n\t\t\t\t      \t</legend>\r\n\t\t\t\t      \t<div className=\"cf\">\r\n\t\t\t\t        \t<input className=\" f4 input-reset bn fl black-80 bg-white pa3 lh-solid w-80-l w-100 w-75-m tc br2-ns br--left-ns\" \r\n\t\t\t\t        \t   placeholder=\"Search Books By title, author, or ISBN...\" \r\n\t\t\t\t        \t   onChange={this.onTextChange}\r\n\t\t\t\t        \t   type=\"text\" \r\n\t\t\t\t        \t   value={this.state.searchText}\r\n\t\t\t\t        \t/>\r\n\t\t\t\t        \t<button className=\"f4 f3-ns button-reset fl pv3 tc bn pa3 bg-animate bg-black-70 hover-bg-black white pointer w-100 w-25-m w-20-l br2-ns br--right-ns grow\" \r\n\t\t\t\t        \t\tonClick={this.onButtonClick} \r\n\t\t\t\t        \t>\r\n\t\t\t\t        \t\tSearch\r\n\t\t\t\t        \t</button>\r\n\t\t\t\t      \t</div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t  \t</div>\r\n\r\n\t\t\t  \t{this.state.fetchingData ? (\r\n\t\t\t        <h1 className=\"ld bold tc fw8 pt6\">\r\n\t\t\t         \t{\"loading... \"}\r\n\t\t\t        </h1>\r\n\t\t    \t) : (\r\n\t\t\t\t\t    (this.state.error && (\r\n\t\t\t\t\t    \t<h1 className=\"red bold pt5\">{this.state.error}</h1>\r\n\t\t\t\t\t    )) || (\r\n\t\t\t\t\t       \t<Cardlist\r\n\t\t\t\t\t            books={this.props.results}\r\n\t\t\t\t\t            expandBook={this.props.expandBook}\r\n\t\t\t\t\t        />\r\n\t\t\t\t\t    )\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n    \t);\r\n  \t}\r\n}\r\n\r\nexport default Searchbox;\r\n","import React, { Component } from \"react\";\r\nimport \"./Book.css\";\r\nimport Axios from \"axios\";\r\n\r\nclass Book extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdescription: \"Fecting description for this book ... \",\r\n\t\t\terror: \"\"\r\n\t\t};\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getDescription();\r\n\t};\r\n\r\n\tgetDescription = () => {\r\n\t\tconst bookId = this.props.bookData.best_book.id;\r\n\t\tconst apiKey = \"iFBP3pW7lQSCL8PY0x8ng\";\r\n\t\tconst requestUri =  \r\n\t\t\t`https://cors-anywhere.herokuapp.com/` +\r\n\t      \t`https://www.goodreads.com/book/show/${bookId}?key=${apiKey}`;\r\n\r\n\t\tAxios.get(requestUri)\r\n      \t\t.then(res => {\r\n      \t\t\tthis.parseXMLresponse(res.data);\r\n      \t\t})\r\n      \t\t.catch(error => {\r\n\t        \tthis.setState({\r\n\t          \terror: error.toString()\r\n\t        });\r\n\t    });\r\n\t};\r\n\r\n\tparseXMLresponse = (data) =>{\r\n\t\tconst parser = new DOMParser();\r\n        const XMLResponse = parser.parseFromString(data, \"application/xml\");\r\n        const parseError = XMLResponse.getElementsByTagName(\"parsererror\");\r\n\r\n        if (parseError.length) {\r\n          \tthis.setState({\r\n            \terror: \"There was an error fetching results.\"\r\n          \t});\r\n        } else {\r\n          \tlet description = XMLResponse.getElementsByTagName(\"description\")[0].innerHTML;\r\n\t\t\tdescription = description.replace(\"<![CDATA[\", \"\").replace(\"]]>\", \"\");\r\n\r\n          \tif (!description) {\r\n            \tdescription = \"No description found.\";\r\n          \t}\r\n          \tthis.setState({ description });\r\n        }\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { bookData } = this.props;\r\n\t\treturn (\r\n\t\t\t<article className=\"cf mh6-l ph5-l mv5-l pv5-l mh3-m ph3-m mv3-m pv3-m mh2 ph2 mv2 pv2 bg-white br4\">\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"f6 link dim br2 ph3 pv2 mb2 dib white bg-black\" onClick={this.props.collapseBook} href='##'>Go Back</a>\r\n\t\t\t</div>\t\r\n\t\t\t<h1 className=\"mb4 mt0 lh-title tc-m\">{bookData.best_book.title}</h1>\r\n\t\t\t<header className=\"fn fl-ns w-30-l w-60-m pr4-l mh6-m mt3\">\r\n\t\t\t\t<div className='ba'>\r\n\t    \t\t\t<img src={bookData.best_book.image_url} alt=\"book\" className='tc w-100 bt bb' style={{'height': '300px'}} />\r\n\t    \t\t\t<div className='tc'>\r\n\t    \t\t\t\t<p className='pv2 ma0 bb'>Author  :  {bookData.best_book.author.name}</p>\r\n\t    \t\t\t\t<p className='pv2 ma0 bb'>Avg. Rating  :  {bookData.average_rating}</p>\r\n\t    \t\t\t\t<p className='pv2 ma0'>Published Date: {`${bookData.original_publication_day}/${bookData.original_publication_month}/${bookData.original_publication_year}`}</p>\r\n\t    \t\t\t</div>\r\n    \t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t  \t<div className=\"fn fl-ns w-70-l w-100\">\r\n\t\t\t\t    <p clasNames=\"lh-copy mt4 mt0-ns pr2 fw6 f3 measure-wide\">\r\n\t\t\t\t      \t{(this.state.error && (<p className=\"red\">{this.state.error}</p>)) || (<p dangerouslySetInnerHTML={{ __html: this.state.description }} />)}\r\n\t\t\t\t    </p>\r\n\t\t\t\t    <h3>\r\n\t\t\t\t    \t<a href={`https://www.goodreads.com/book/show/${bookData.best_book.id}`} className=\"link dim blue\">\r\n\t\t\t\t    \t\tLearn More\r\n\t\t\t\t    \t</a>\r\n\t\t\t\t    </h3>\r\n\t\t\t  \t</div>\r\n\t\t\t</article>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\nimport Searchbox from './components/Searchbox/Searchbox.js';\nimport Book from './components/Book/Book.js';\nimport './App.css';\n\nclass App extends Component {\n\n\tstate = {\n\t\tresults: [],    \t\t\t//array of all the books obtained\n\t\texpandedBook: null\t\t\t//variable wich stores book data when some book is opened\n\t};\n\n\tsetResults = (results) => {\t\t//called when something is searched\n\t\tthis.setState({results});\n\t};\n\n\tcollapseBook = () => {\t\t\t\t//called when book info page is closed\n\t\tthis.setState({\n\t\t\texpandedBook: null\n\t\t});\n\t};\n\n\texpandBook = expandedBook => {\t\t\t//called when some book is opened\n\t\tthis.setState({expandedBook});\n\t};\n\n\trender() {\n\t    return (\n\t      \t<div>\n\t\t      \t{this.state.expandedBook ? \n\t\t      \t\t(\n\t\t      \t\t\t<Book \n\t\t\t      \t\t\tbookData={this.state.expandedBook}\n\t\t\t      \t\t\tcollapseBook={this.collapseBook} \n\t\t      \t\t\t />\n\t\t      \t\t)\n\t\t      \t:\n\t\t\t      \t(\t\n\t\t\t\t        <Searchbox \n\t\t\t\t        \tresults={this.state.results}\n\t\t\t              \tsetResults={this.setResults}\n\t\t\t              \texpandBook={this.expandBook}\n\t\t\t\t        />\n\t\t\t\t    )\n\t\t\t    }\n\t      \t</div>\n\t    );\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render( \n\t<App /> ,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}